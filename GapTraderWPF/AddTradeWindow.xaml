<Window x:Class="GapTraderWPF.AddTradeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GapTraderWPF"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:converters="clr-namespace:GapTraderWPF.Converters"
        xmlns:viewModels="clr-namespace:GapTraderCore.ViewModels;assembly=GapTraderCore"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:validationRules="clr-namespace:GapTraderWPF.ValidationRules"
        xmlns:helpers="clr-namespace:GapTraderWPF.Helpers"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type viewModels:AddTradeViewModel}}"
        Title="Trade Details" Height="390" Width="445"
        Background="Black">
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Center" Margin="2">
                    <Grid Width="12" Height="12">
                        <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" />
                        <TextBlock Foreground="White" FontWeight="Heavy" 
                                   FontSize="8" HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}">X</TextBlock>
                    </Grid>
                </StackPanel>
                <AdornedElementPlaceholder x:Name="ErrorAdorner" />
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <Border BorderBrush="White" BorderThickness="2">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="30" />
                <RowDefinition Height="40" />

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140"/>
                <ColumnDefinition Width="290"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Text="Market"/>
            <TextBlock Grid.Column="0" Grid.Row="1" Text="Strategy"/>
            <TextBlock Grid.Column="0" Grid.Row="2" Text="Entry"/>
            <TextBlock Grid.Column="0" Grid.Row="3" Text="Target"/>
            <TextBlock Grid.Column="0" Grid.Row="4" Text="Stop"/>
            <TextBlock Grid.Column="0" Grid.Row="5" Text="Open Level"/>
            <TextBlock Grid.Column="0" Grid.Row="6" Text="Open Date/Time"/>
            <TextBlock Grid.Column="0" Grid.Row="7" Text="Close Level"/>
            <TextBlock Grid.Column="0" Grid.Row="8" Text="Close Date/Time"/>
            <TextBlock Grid.Column="0" Grid.Row="9" Text="Size"/>

            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                <ComboBox Width="155" Height="22"
                      SelectedItem="{Binding SelectedMarket}" ItemsSource="{Binding Markets}" DisplayMemberPath="Name" />
                <Button Width="20" Height="20" Margin="5" Command="{Binding AddNewMarketCommand}" />
            </StackPanel>

            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <ComboBox Width="255" Height="22"
                          SelectedItem="{Binding SelectedStrategy}" ItemsSource="{Binding Strategies}" DisplayMemberPath="Title" />
                <Button Width="20" Height="20" Margin="5" Command="{Binding AddNewStrategyCommand}" />
            </StackPanel>

            <TextBox Grid.Column="1" Grid.Row="2" Margin="3,3,35,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=EntryHasError}">
                <TextBox.Text>
                    <Binding Path="Entry"
                         Mode="TwoWay"
                         UpdateSourceTrigger="PropertyChanged"
                         TargetNullValue="{x:Static system:String.Empty}"
                         Converter="{converters:EmptyDoubleToStringConverter}">
                        <Binding.ValidationRules>
                            <validationRules:PointsNumberValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Grid.Column="1" Grid.Row="3" Margin="3,3,35,3" 
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=TargetHasError}">
                <TextBox.Text>
                    <Binding Path="Target"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                        <Binding.ValidationRules>
                            <validationRules:PointsNumberValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Grid.Column="1" Grid.Row="4" Margin="3,3,35,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=StopHasError}">
                <TextBox.Text>
                    <Binding Path="Stop"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                        <Binding.ValidationRules>
                            <validationRules:PointsNumberValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <TextBox Grid.Column="1" Grid.Row="5" Margin="3,3,35,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=OpenLevelHasError}">
                <TextBox.Text>
                    <Binding Path="OpenLevel"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                        <Binding.ValidationRules>
                            <validationRules:PointsNumberValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <StackPanel Grid.Column="1" Grid.Row="6" Orientation="Horizontal">
                <DatePicker SelectedDate="{Binding OpenDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <xctk:TimePicker Width="75" Margin="5,2,5,2" Value="{Binding OpenTime}"/>
                <DockPanel Visibility="{Binding DatesHaveError, Converter={converters:BoolToHiddenVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Center" Margin="2">
                        <Grid Width="12" Height="12">
                            <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                     VerticalAlignment="Center" />
                            <TextBlock Foreground="White" FontWeight="Heavy" 
                                       FontSize="8" HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" TextAlignment="Center"
                                       ToolTip="Open Date/Time Must Be Earlier Than Close Date/Time">X</TextBlock>
                        </Grid>
                    </StackPanel>
                </DockPanel>
            </StackPanel>

            <TextBox Grid.Column="1" Grid.Row="7" Margin="3,3,35,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=CloseLevelHasError}">
                <TextBox.Text>
                    <Binding Path="CloseLevel"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:OptionalDoubleToStringConverter}">
                        <Binding.ValidationRules>
                            <validationRules:CloseLevelValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <StackPanel Grid.Column="1" Grid.Row="8" Orientation="Horizontal">
                <DatePicker SelectedDate="{Binding CloseDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <xctk:TimePicker Width="75" Margin="5,2,5,2" Value="{Binding CloseTime}"/>

                <DockPanel Visibility="{Binding DatesHaveError, Converter={converters:BoolToHiddenVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Center" Margin="2">
                        <Grid Width="12" Height="12">
                            <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" />
                            <TextBlock Foreground="White" FontWeight="Heavy" 
                                   FontSize="8" HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="Open Date/Time Must Be Earlier Than Close Date/Time">X</TextBlock>
                        </Grid>
                    </StackPanel>
                </DockPanel>
            </StackPanel>

            <TextBox Grid.Column="1" Grid.Row="9" Margin="3,3,35,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=SizeHasError}">
                <TextBox.Text>
                    <Binding Path="Size"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                        <Binding.ValidationRules>
                            <validationRules:PointsNumberValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Button Width="170" Height="30" Margin="5" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="10"
                    HorizontalAlignment="Center" Content="Add Trade" VerticalContentAlignment="Center"
                    Command="{Binding ConfirmNewTradeCommand}" Click="OnTradeAdded" IsEnabled="{Binding IsAddEnabled}">
            </Button>
        </Grid>
    </Border>
</Window>
