<Window x:Class="GapTraderWPF.AddTradeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GapTraderWPF"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:converters="clr-namespace:GapTraderWPF.Converters"
        xmlns:viewModels="clr-namespace:GapTraderCore.ViewModels;assembly=GapTraderCore"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:validationRules="clr-namespace:GapTraderWPF.ValidationRules"
        xmlns:helpers="clr-namespace:GapTraderWPF.Helpers"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type viewModels:AddTradeViewModel}}"
        Title="Trade Details" MinHeight="445" MaxHeight="445" MinWidth="405" MaxWidth="405"
        Background="Black">
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,3,0" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Width" Value="96" />
        </Style>
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Center" Margin="2">
                    <Grid Width="12" Height="12">
                        <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" />
                        <TextBlock Foreground="White" FontWeight="Heavy" 
                                   FontSize="8" HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}">X</TextBlock>
                    </Grid>
                </StackPanel>
                <AdornedElementPlaceholder x:Name="ErrorAdorner" />
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <Border BorderBrush="White" BorderThickness="2">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="140" />
                <RowDefinition Height="110" />
                <RowDefinition Height="80" />
                <RowDefinition Height="40" />

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="145"/>
                <ColumnDefinition Width="240"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Grid.Row="0" Text="Market"/>
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                <ComboBox Width="96" Height="22"
                      SelectedItem="{Binding SelectedMarket}" ItemsSource="{Binding Markets}" DisplayMemberPath="Name" />
                <Button Width="20" Height="20" Margin="5" Command="{Binding AddNewMarketCommand}" >
                    <Image Source="Icons/Plus.png" ToolTip="Add New Market"/>
                </Button>
            </StackPanel>


            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="White" BorderThickness="1,1,1,0" Margin="5,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="240"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Text="Strategy Details" FontSize="11" HorizontalAlignment="Center"/>

                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Entry"/>
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Target"/>
                    <TextBlock Grid.Column="0" Grid.Row="4" Text="Stop"/>

                    <StackPanel Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="15,0,0,0">
                        <ComboBox Width="315" Height="22"
                          SelectedItem="{Binding SelectedStrategy}" ItemsSource="{Binding Strategies}" DisplayMemberPath="ShortName" ToolTip="{Binding SelectedStrategy.Name}"/>
                        <Button Width="20" Height="20" Margin="5" Command="{Binding AddNewStrategyCommand}">
                            <Image Source="Icons/Plus.png" ToolTip="Add New Strategy"/>
                        </Button>
                    </StackPanel>

                    <TextBox Grid.Column="1" Grid.Row="2" Margin="3,3,0,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=EntryHasError}">
                        <TextBox.Text>
                            <Binding Path="Entry"
                         Mode="TwoWay"
                         UpdateSourceTrigger="PropertyChanged"
                         TargetNullValue="{x:Static system:String.Empty}"
                         Converter="{converters:EmptyDoubleToStringConverter}">
                                <Binding.ValidationRules>
                                    <validationRules:PointsNumberValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Column="1" Grid.Row="3" Margin="3,3,0,3" 
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=TargetHasError}">
                        <TextBox.Text>
                            <Binding Path="Target"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                                <Binding.ValidationRules>
                                    <validationRules:PointsNumberValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Column="1" Grid.Row="4" Margin="3,3,0,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=StopHasError}">
                        <TextBox.Text>
                            <Binding Path="Stop"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                                <Binding.ValidationRules>
                                    <validationRules:PointsNumberValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </Border>

            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="White" BorderThickness="1" Margin="5,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="240"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Text="Actual Open Details" FontSize="11" HorizontalAlignment="Center"/>
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Open Level"/>
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Size"/>
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Open Date/Time"/>

                    <TextBox Grid.Column="1" Grid.Row="1" Margin="3,3,0,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=OpenLevelHasError}">
                        <TextBox.Text>
                            <Binding Path="OpenLevel"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                                <Binding.ValidationRules>
                                    <validationRules:PointsNumberValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>


                    <TextBox Grid.Column="1" Grid.Row="2" Margin="3,3,0,3"
                             Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                             helpers:HasErrorUtility.MvvmHasError="{Binding Path=SizeHasError}">
                        <TextBox.Text>
                            <Binding Path="Size"
                                     Mode="TwoWay"
                                     UpdateSourceTrigger="PropertyChanged"
                                     TargetNullValue="{x:Static system:String.Empty}"
                                     Converter="{converters:EmptyDoubleToStringConverter}">
                                <Binding.ValidationRules>
                                    <validationRules:PointsNumberValidationRule/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>


                    <StackPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal">
                        <DatePicker SelectedDate="{Binding OpenDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <xctk:TimePicker Width="75" Height="20" Margin="5,2,5,2" Value="{Binding OpenTime}"/>
                        <DockPanel Visibility="{Binding DatesHaveError, Converter={converters:BoolToHiddenVisibilityConverter}}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="2">
                                <Grid Width="12" Height="12">
                                    <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                     VerticalAlignment="Center" />
                                    <TextBlock Foreground="White" FontWeight="Heavy" Margin="-1,0,0,0"
                                       FontSize="8" HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" TextAlignment="Center"
                                       ToolTip="Open Date/Time Must Be Earlier Than Close Date/Time">X</TextBlock>
                                </Grid>
                            </StackPanel>
                        </DockPanel>
                    </StackPanel>
                </Grid>
            </Border>

            <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="White" BorderThickness="1,0,1,1" Margin="5,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="140"/>
                        <ColumnDefinition Width="240"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Text="Actual Close Details" FontSize="11" HorizontalAlignment="Center"/>
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Close Level"/>
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Close Date/Time"/>

                    <TextBox Grid.Column="1" Grid.Row="1" Margin="3,3,0,3"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=CloseLevelHasError}">
                <TextBox.Text>
                    <Binding Path="CloseLevel"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             TargetNullValue="{x:Static system:String.Empty}"
                             Converter="{converters:OptionalDoubleToStringConverter}">
                        <Binding.ValidationRules>
                            <validationRules:CloseLevelValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <StackPanel Grid.Column="1" Grid.Row="2" Orientation="Horizontal">
                <DatePicker SelectedDate="{Binding CloseDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <xctk:TimePicker Width="75" Height="20" Margin="5,2,5,2" Value="{Binding CloseTime}"/>

                <DockPanel Visibility="{Binding DatesHaveError, Converter={converters:BoolToHiddenVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Center" Margin="2">
                        <Grid Width="12" Height="12">
                            <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" />
                            <TextBlock Foreground="White" FontWeight="Heavy" Margin="-1,0,0,0"
                                   FontSize="8" HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="Open Date/Time Must Be Earlier Than Close Date/Time">X</TextBlock>
                        </Grid>
                    </StackPanel>
                </DockPanel>
            </StackPanel>
                    </Grid>
                </Border>

            <Button Width="170" Height="30" Margin="5" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4"
                    HorizontalAlignment="Center" Content="Add Trade" VerticalContentAlignment="Center"
                    Command="{Binding ConfirmNewTradeCommand}" Click="OnTradeAdded" IsEnabled="{Binding IsAddEnabled}">
            </Button>
        </Grid>
    </Border>
</Window>
