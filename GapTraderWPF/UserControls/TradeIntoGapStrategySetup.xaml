<UserControl x:Class="GapTraderWPF.UserControls.TradeIntoGapStrategySetup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GapTraderWPF.UserControls"
             mc:Ignorable="d"
             xmlns:strategyTesters="clr-namespace:GapTraderCore.StrategyTesters;assembly=GapTraderCore"
             xmlns:converters="clr-namespace:GapTraderWPF.Converters"
             xmlns:helpers="clr-namespace:GapTraderWPF.Helpers"
             xmlns:validationRules="clr-namespace:GapTraderWPF.ValidationRules"
             d:DataContext="{d:DesignInstance {x:Type strategyTesters:IntoGapStrategyTester}}"
             d:DesignHeight="95" d:DesignWidth="465">
    <UserControl.Resources>
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" HorizontalAlignment="Center" Margin="0,2">
                    <Grid Width="12" Height="12">
                        <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" 
                                 VerticalAlignment="Center" />
                        <TextBlock Foreground="White" FontWeight="Heavy" 
                                   FontSize="8" HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" TextAlignment="Center"
                                   ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}">X</TextBlock>
                    </Grid>
                </StackPanel>
                <AdornedElementPlaceholder x:Name="ErrorAdorner" />
            </DockPanel>
        </ControlTemplate>

        <Style TargetType="TextBox">
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="40" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="185"/>
            <ColumnDefinition Width="105"/>
            <ColumnDefinition Width="175"/>
        </Grid.ColumnDefinitions>

        <Border BorderBrush="Black" BorderThickness="1" Margin="0,0,5,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="15" />
                    <RowDefinition Height="15" />
                    <RowDefinition Height="35" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Entry" Grid.ColumnSpan="4"
                       HorizontalAlignment="Center" FontWeight="Bold" VerticalAlignment="Center"/>

                <RadioButton Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4"
                             HorizontalAlignment="Left"  Margin="40,0,5,0" 
                             VerticalAlignment="Top" IsChecked="{Binding IsFibEntry}">
                    <RadioButton.Content>
                        <TextBlock Text="Fib Extension" VerticalAlignment="Center" Margin="-5,0,0,0" FontSize="11"/>
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4"
                             HorizontalAlignment="Left"  Margin="40,0,5,0" 
                             VerticalAlignment="Top" IsChecked="{Binding IsFibEntry, Converter={converters:BoolToInverseNullableBoolConverter}}">
                    <RadioButton.Content>
                        <TextBlock Text="Points From Open" VerticalAlignment="Center" Margin="-5,0,0,0" FontSize="11"/>
                    </RadioButton.Content>
                </RadioButton>

                <TextBlock Grid.Column="1" Grid.Row="3" Text="+/-" HorizontalAlignment="Center" 
                           FontSize="11" VerticalAlignment="Center"
                           Visibility="{Binding IsFibEntry, Converter={converters:BoolToHiddenVisibilityConverter}}" />

                <ComboBox Grid.Row="3" Grid.Column="0" Width="70" Height="22" IsEnabled="{Binding IsFibEntry}"
                      SelectedIndex="{Binding FibLevelEntry, Converter={converters:IntegerToFibExtensionConverter}, Mode=TwoWay}"
                      SelectedItem="0">
                    <ComboBoxItem Content="127.1%" />
                    <ComboBoxItem Content="141.4%" />
                    <ComboBoxItem Content="161.8%" />
                    <ComboBoxItem Content="200%" />
                    <ComboBoxItem Content="227.1%" />
                    <ComboBoxItem Content="241.4%" />
                    <ComboBoxItem Content="268.1%" />
                    <ComboBoxItem Content="300%" />
                    <ComboBoxItem Content="361.8%" />
                </ComboBox>

                <TextBox Grid.Row="3" Grid.Column="2"
                         HorizontalContentAlignment="Right"
                         Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                         helpers:HasErrorUtility.MvvmHasError="{Binding Path=EntryHasError}">
                    <TextBox.Resources>
                        <helpers:BindingProxy x:Key="SourceProxy" Data="{Binding IsFibEntry, Mode=TwoWay}" />
                        <helpers:BindingProxy x:Key="TargetProxy" Data="{Binding IsFibEntry}" />
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="PointsEntry"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                            <Binding.ValidationRules>
                                <validationRules:PointsNumberValidationRule>
                                    <validationRules:PointsNumberValidationRule.CanBeNegative>
                                        <helpers:ValidationWrapper Data="{Binding Source={StaticResource SourceProxy}, Path=Data, Mode=OneWay}" BindingToTrigger="{Binding Data, Source={StaticResource TargetProxy}}"/>
                                    </validationRules:PointsNumberValidationRule.CanBeNegative>
                                </validationRules:PointsNumberValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock FontSize="11" Text="Points" Grid.Column="3" Grid.Row="3" VerticalAlignment="Center" 
                           HorizontalAlignment="Left" Margin="-3,0,0,0"/>
            </Grid>
        </Border>

        <local:StopSizeSetter Grid.Column="1"/>

        <Border BorderBrush="Black" BorderThickness="1" 
                Grid.Column="2" Grid.Row="0" Margin="5,0,0,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="15" />
                    <RowDefinition Height="15" />
                    <RowDefinition Height="35" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Grid.Row="0" Text="Target" Grid.ColumnSpan="4"
                       HorizontalAlignment="Center" FontWeight="Bold" VerticalAlignment="Center"/>

                <RadioButton Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4"
                             HorizontalAlignment="Left" Margin="40,0,5,0" 
                             VerticalAlignment="Top" IsChecked="{Binding IsFibTarget}">
                    <RadioButton.Content>
                        <TextBlock Text="Fib Retrace" VerticalAlignment="Center" Margin="-5,0,0,0" FontSize="11"/>
                    </RadioButton.Content>
                </RadioButton>
                <RadioButton Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="4"
                             HorizontalAlignment="Left" Margin="40,0,5,0" 
                             VerticalAlignment="Top" 
                             IsChecked="{Binding IsFibTarget, Converter={converters:BoolToInverseNullableBoolConverter}}">
                    <RadioButton.Content>
                        <TextBlock Text="Points From Entry" VerticalAlignment="Center" Margin="-5,0,0,0" FontSize="11"/>
                    </RadioButton.Content>
                </RadioButton>

                <TextBlock Grid.Column="1" Grid.Row="3" Text="+/-" FontSize="11"
                           HorizontalAlignment="Center" VerticalAlignment="Center"
                           Visibility="{Binding IsFibTarget, Converter={converters:BoolToHiddenVisibilityConverter}}"/>

                <ComboBox Grid.Row="3" Grid.Column="0" Width="60" Height="22" IsEnabled="{Binding IsFibTarget}"
                      SelectedIndex="{Binding FibLevelTarget, Converter={converters:IntegerToFibRetracementConverter}, Mode=TwoWay}"
                      SelectedItem="0">
                    <ComboBoxItem Content="5.9%" />
                    <ComboBoxItem Content="11.4%" />
                    <ComboBoxItem Content="23.6%" />
                    <ComboBoxItem Content="38.2%" />
                    <ComboBoxItem Content="50%" />
                    <ComboBoxItem Content="61.8%" />
                    <ComboBoxItem Content="78.6%" />
                    <ComboBoxItem Content="88.6%" />
                    <ComboBoxItem Content="94.1%" />
                </ComboBox>

                <TextBox Grid.Row="3" Grid.Column="2" 
                         HorizontalContentAlignment="Right"
                     Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"
                     helpers:HasErrorUtility.MvvmHasError="{Binding Path=TargetHasError}">
                    <TextBox.Resources>
                        <helpers:BindingProxy x:Key="SourceProxy" Data="{Binding IsFibTarget, Mode=TwoWay}" />
                        <helpers:BindingProxy x:Key="TargetProxy" Data="{Binding IsFibTarget}" />
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="PointsTarget"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True"
                             Converter="{converters:EmptyDoubleToStringConverter}">
                            <Binding.ValidationRules>
                                <validationRules:PointsNumberValidationRule>
                                    <validationRules:PointsNumberValidationRule.CanBeNegative>
                                        <helpers:ValidationWrapper Data="{Binding Source={StaticResource SourceProxy}, Path=Data, Mode=OneWay}" BindingToTrigger="{Binding Data, Source={StaticResource TargetProxy}}"/>
                                    </validationRules:PointsNumberValidationRule.CanBeNegative>
                                </validationRules:PointsNumberValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock FontSize="11" Text="Points" Grid.Column="3" Grid.Row="3" VerticalAlignment="Center" 
                           HorizontalAlignment="Left" Margin="-3,0,0,0"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>
