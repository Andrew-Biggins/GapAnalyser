<UserControl x:Class="GapTraderWPF.UserControls.DynamicStrategyTester"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GapTraderWPF.UserControls"
             xmlns:viewModels="clr-namespace:GapTraderCore.ViewModels;assembly=GapTraderCore"
             xmlns:variableSelectors="clr-namespace:GapTraderCore.VariableSelectors;assembly=GapTraderCore"
             xmlns:converters="clr-namespace:GapTraderWPF.Converters"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type viewModels:DynamicStrategyFinderViewModel}}"
             d:DesignHeight="350" d:DesignWidth="660">
    <UserControl.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="40" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
    </UserControl.Resources>
    <Border BorderBrush="Black" BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition Height="238" />
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="595"/>
                <ColumnDefinition Width="65"/>
            </Grid.ColumnDefinitions>

            <ContentControl Grid.Row="0" Grid.Column="0" Content="{Binding VariableSelector}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type variableSelectors:DynamicTestVariableSelector}">
                        <local:DynamicTestVariableSelector />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:LoadingBarViewModel}">
                        <local:LoadingBar />
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>

            <Button Content="Search" HorizontalAlignment="Right" VerticalAlignment="Bottom" Command="{Binding FindStrategiesCommand}"
                    Grid.Row="0" Grid.Column="1" Height="25" Width="60" Margin="0,0,5,0" IsEnabled="{Binding SearchEnabled}" />

            <DataGrid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" CanUserResizeRows="False"
                      AutoGenerateColumns="False" Margin="5" HorizontalContentAlignment="Center" 
                      ItemsSource="{Binding Trades, Mode=OneWay}"
                      IsReadOnly="True">
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Date"
                                        Binding="{Binding OpenTime.Date, StringFormat=dd/MM/yy}" Width="*" />
                    <DataGridTextColumn Header="Entry Fib"
                                        Binding="{Binding OpenFibLevel, Converter={converters:FibLevelToNumericStringConverter}}" Width="*" />

                    <DataGridTextColumn Header="Entry Level"
                                        Binding="{Binding OpenLevel}" Width="*" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Target Fib"
                                            Binding="{Binding TargetFibLevel, Converter={converters:FibLevelToNumericStringConverter}}" Width="*" />

                    <DataGridTextColumn Header="Target Level"
                                        Binding="{Binding Target}" Width="*" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Stop Size"
                                            Binding="{Binding StopSize, StringFormat=N1}" Width="*" />
                    <DataGridTextColumn Header="Stop Level"
                                        Binding="{Binding StopLevel}" Width="*" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="+/- points"
                                        Binding="{Binding PointsProfit, StringFormat=N1}" Width="*" />

                    <DataGridTextColumn Header="Profit"
                                        Binding="{Binding CashProfit, StringFormat=N1}" Width="*" />

                </DataGrid.Columns>
            </DataGrid>
            <Border BorderBrush="Black" BorderThickness="1" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="5,0,5,0">
            <StackPanel  Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" 
                         HorizontalAlignment="Right">
                <TextBlock Text="End Balance:"  Margin="0,0,5,0"/>
                    <TextBlock Width="auto" Text="{Binding EndBalance}" Margin="0,0,10,0"/>
            </StackPanel>
                </Border>
        </Grid>
    </Border>
</UserControl>
